{"version":3,"sources":["../es6/TileRegistry.js"],"names":[],"mappings":"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","file":"TileRegistry.js","sourcesContent":["class TileRegistry {\n\n\tconstructor(mainParentSelector, choiceTileCount=4) {\n\t\tUtils.assert($(mainParentSelector).length > 0, \"Invalid parameter: parentSelector\" + ((mainParentSelector !== undefined) ? ` (${mainParentSelector})` : \"\"));\n\t\tUtils.assert($(mainParentSelector).length === 1, `Invalid parentSelector (too many matches): ${mainParentSelector}`);\n\n\t\tthis.mainParentSelector = mainParentSelector;\n\t\tthis.choiceTileCount = choiceTileCount;\n\n\t\tthis.mainTile = undefined;\n\t\tthis.groups = {};\n\t}\n\n\t_initGroup(name, parentSelector=this.groups[name].parentSelector) {\n\t\tUtils.assert(typeof name === \"string\" && name.length > 0, `Invalid parameter: name ${name === undefined ? \"\" : name}`);\n\n\t\tUtils.assert($(parentSelector).length > 0, \"Invalid parameter: parentSelector\" + ((parentSelector !== undefined) ? ` (${parentSelector})` : \"\"));\n\t\tUtils.assert($(parentSelector).length === 1, `Invalid parentSelector (too many matches): ${parentSelector}`);\n\n\t\t$(parentSelector).find(\".tile\").remove();\n\n\t\tlet registry = this;\n\n\t\tthis.groups[name] = {\n\t\t\tregistry,\n\t\t\tname,\n\t\t\tparentSelector,\n\t\t\ttiles: [],\n\t\t\tget totalValue() { // TODO this is janky and needs improvement\n\t\t\t\tvar valuesWithOperators = (this.choices || this.tiles).map(c => `${c.operation} (${c.value})`);\n\t\t\t\tvar mathString = registry.mainTile.value + \" \" + valuesWithOperators.join(\" \"); // ex: \"7 * (11) + (49) - (39) + (23)\"\n\t\t\t\treturn math.eval(mathString);\n\t\t\t}\n\t\t};\n\t}\n\n\taddGroup(name, parentSelector) {\n\t\tthis._initGroup(name, parentSelector);\n\t}\n\n\tclearGroup(name) {\n\t\tthis._initGroup(name);\n\t}\n\n\t_genMainTile(diff) {\n\t\tif (this.mainTile !== undefined) {\n\t\t\tthis.mainTile.remove();\n\t\t\tthis.mainTile = undefined;\n\t\t}\n\n\t\tif (diff !== undefined) {\n\t\t\tthis.mainTile = new Tile(\n\t\t\t\tRandomizer.getRandomTileData(diff, true).valueString,\n\t\t\t\tthis.mainParentSelector\n\t\t\t);\n\t\t}\n\n\t}\n\n\t_genChoiceTiles(groupName, diff, mainNumber) {\n\t\tUtils.assert(typeof groupName === \"string\" && this.groups[groupName] !== undefined,\n\t\t\t`Invalid group: ${groupName}`);\n\n\t\tif (diff === undefined) {\n\t\t\tthis.clearGroup(groupName);\n\t\t\treturn;\n\t\t}\n\n\t\tUtils.assert(mainNumber !== undefined,\n\t\t\t\"_genChoiceTiles(...) must be called after main number is generated\");\n\t\tUtils.assert(typeof mainNumber === \"string\" || typeof mainNumber === \"number\",\n\t\t\t`Invalid mainNumber: ${mainNumber}`);\n\n\n\t\tvar group = this.groups[groupName];\n\n\t\tgroup.tiles.forEach(t => t.remove());\n\t\tgroup.tiles = [];\n\n\t\tfor( // generate the tiles\n\t\t\tgroup.choices = [];\n\t\t\tgroup.choices.push(Randomizer.genSingleChoiceTile(diff, group, mainNumber)) < this.choiceTileCount;\n\t\t) {}\n\n\t\t/*for( // shuffle the order\n\t\t\tlet a = group.choices, rand, i = a.length;\n\t\t\ti > 0;\n\t\t\trand = Randomizer.rand(0, --i), [a[i], a[rand]] = [a[rand], a[i]]\n\t\t) {}*/\n\n\t\tgroup.tiles = group.choices.map(c => c.toTile(group.parentSelector));\n\n\t\t$(group.parentSelector).attr(\"data-totalValue\", group.totalValue);\n\t}\n\n\tgenerateTiles(diff) {\n\t\tthis._genMainTile(diff);\n\t\tObject.keys(this.groups).forEach(g => this._genChoiceTiles(g, diff, this.mainTile.value));\n\t}\n}"]}