{"version":3,"sources":["../es6/TileRegistry.js"],"names":[],"mappings":";;;;;;;;IAAM,YAAY;AAEN,UAFN,YAAY,CAEL,kBAAkB,EAAqB;MAAnB,eAAe,yDAAC,CAAC;;wBAF5C,YAAY;;AAGhB,OAAK,CAAC,MAAM,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,mCAAmC,IAAI,AAAC,kBAAkB,KAAK,SAAS,UAAS,kBAAkB,SAAM,EAAE,CAAA,AAAC,CAAC,CAAC;AAC7J,OAAK,CAAC,MAAM,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,MAAM,KAAK,CAAC,kDAAgD,kBAAkB,CAAG,CAAC;;AAErH,MAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;AAC7C,MAAI,CAAC,eAAe,GAAG,eAAe,CAAC;;AAEvC,MAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;AAC1B,MAAI,CAAC,aAAa,GAAG,EAAE,CAAC;EACxB;;cAXI,YAAY;;SAaP,oBAAC,IAAI;OAAE,cAAc,yDAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,cAAc;uBAAE;AACxE,SAAK,CAAC,MAAM,CAAC,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,gCAA6B,IAAI,KAAK,SAAS,GAAG,EAAE,GAAG,IAAI,CAAA,CAAG,CAAA;;AAEtH,SAAK,CAAC,MAAM,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,mCAAmC,IAAI,AAAC,cAAc,KAAK,SAAS,UAAS,cAAc,SAAM,EAAE,CAAA,AAAC,CAAC,CAAC;AACjJ,SAAK,CAAC,MAAM,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,MAAM,KAAK,CAAC,kDAAgD,cAAc,CAAG,CAAC;;AAE7G,KAAC,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;;AAEzC,QAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG;AAC1B,mBAAc,EAAd,cAAc;AACd,UAAK,EAAE,EAAE;KACT,CAAC;IACF;GAAA;;;SAEO,kBAAC,IAAI,EAAE,cAAc,EAAE;AAC9B,OAAI,CAAC,UAAU,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;GACtC;;;SAES,oBAAC,IAAI,EAAE;AAChB,OAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;GACtB;;;SAEW,sBAAC,IAAI,EAAE;AAClB,OAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE;AAChC,QAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;AACvB,QAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;IAC1B;;AAED,OAAI,IAAI,KAAK,SAAS,EAAE;AACvB,QAAI,CAAC,QAAQ,GAAG,IAAI,IAAI,CACvB,YAAY,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,WAAW,EACtD,IAAI,CAAC,kBAAkB,CACvB,CAAC;IACF;;AAED,OAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;GACrB;;;SAEc,yBAAC,SAAS,EAAE,IAAI,EAAE,UAAU,EAAE;AAC5C,QAAK,CAAC,MAAM,CAAC,OAAO,SAAS,KAAK,QAAQ,IAAI,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,KAAK,SAAS,sBACtE,SAAS,CAAG,CAAC;;AAEhC,OAAI,IAAI,KAAK,SAAS,EAAE;AACvB,QAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;AAC3B,WAAO;IACP;;AAED,QAAK,CAAC,MAAM,CAAC,UAAU,KAAK,SAAS,EACpC,oEAAoE,CAAC,CAAC;AACvE,QAAK,CAAC,MAAM,CAAC,OAAO,UAAU,KAAK,QAAQ,IAAI,OAAO,UAAU,KAAK,QAAQ,2BACrD,UAAU,CAAG,CAAC;;AAGtC,OAAI,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;;AAE1C,QAAK,CAAC,KAAK,CAAC,OAAO,CAAC,UAAA,CAAC;WAAI,CAAC,CAAC,MAAM,EAAE;IAAA,CAAC,CAAC;AACrC,QAAK,CAAC,KAAK,GAAG,EAAE,CAAC;;AAEjB,QAAK,CAAC,OAAO,GAAG,EAAE,CAAC;;AAEnB,UACC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC,GAAG,IAAI,CAAC,eAAe,GACpG;;AAEF,QAAK,CAAC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,UAAA,CAAC;WAAI,IAAI,IAAI,CAAC,CAAC,CAAC,WAAW,EAAE,KAAK,CAAC,cAAc,CAAC;IAAA,CAAC,CAAC;;AAEpF,QAAK,CAAC,KAAK,CAAC,OAAO,CAAC,UAAA,CAAC;WAAI,CAAC,CAAC,IAAI,EAAE;IAAA,CAAC,CAAC;GACnC;;;SA2EY,uBAAC,IAAI,EAAE;;;AACnB,OAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;AACxB,SAAM,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,UAAA,CAAC;WAAI,MAAK,eAAe,CAAC,CAAC,EAAE,IAAI,EAAE,MAAK,QAAQ,CAAC,KAAK,CAAC;IAAA,CAAC,CAAC;GACjG;;;SA5E0B,8BAAC,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE;;;AAEpD,aAAU,GAAG,CAAC,UAAU,CAAC;;AAEzB,OAAI,MAAM,GAAG,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;AAClD,OAAI,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC;;AAEjC,OAAI,MAAM,GAAG,SAAT,MAAM;WAAS,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC;IAAA,CAAC;;;AAGxD,OAAI,MAAM,GAAG,SAAT,MAAM,CAAY,OAAO,EAAE;;AAC9B,QAAI,KAAK,GAAG,CAAC,CAAC;AACd,QAAI,GAAG,GAAG,CAAC,CAAC;AACZ,WAAO,OAAO,CAAC,IAAI,CAAC,UAAS,CAAC,EAAC;AAC9B,SAAI,CAAC,CAAC,QAAQ,KAAK,SAAS,EAAE;AAC7B,UAAI,GAAG,KAAK,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,QAAQ,CAAC;AAChC,UAAI,GAAG,GAAG,CAAC,IAAI,GAAG,KAAK,EAAE,KAAK,EAAE,OAAO,IAAI,CAAC;MAC5C;KACD,CAAC,CAAC;IACH,CAAC;;AAEF,OAAI,OAAO,GAAG,KAAK,CAAC;AACpB,UAAO,CAAC,OAAO,KAAK,AAAC,MAAM,CAAC,SAAS,KAAK,SAAS,IAAM,MAAM,CAAC,QAAQ,KAAK,SAAS,CAAC,AAAC,EAAE;AACzF,WAAO,GAAG,IAAI,CAAC;AACf,WAAO,MAAM,CAAC,SAAS,KAAK,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,EAAC,UAAU,EAAV,UAAU,EAAC,CAAC,KAAK,KAAK,EAAE;AAC7F,WAAM,GAAG,MAAM,EAAE,CAAC;AAClB,YAAO,GAAG,KAAK,CAAC;KAChB;AACD,WAAO,MAAM,CAAC,QAAQ,KAAK,SAAS,IAAI,MAAM,CAAC,YAAY,CAAC,EAAE;AAC7D,WAAM,GAAG,MAAM,EAAE,CAAC;AAClB,YAAO,GAAG,KAAK,CAAC;KAChB;IACD;AACD,UAAO,MAAM,CAAC;GACd;;;SAEuB,2BAAC,UAAU,EAAgB;;;OAAd,MAAM,yDAAC,KAAK;;;AAEhD,QAAK,CAAC,MAAM,CAAC,OAAO,UAAU,KAAK,QAAQ,IAAI,eAAe,CAAC,UAAU,CAAC,KAAK,SAAS,2BAChE,UAAU,CAAG,CAAC;;AAEtC,OAAI,OAAO,GAAG,eAAe,CAAC,UAAU,CAAC,CAAC,MAAM,GAAG,MAAM,GAAG,SAAS,CAAC,CAAC;;AAEvE,OAAI,MAAM,GAAG,KAAK,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;;AAE/C,OAAI,KAAK,GAAG,SAAS,CAAC;AACtB,WAAQ,MAAM,CAAC,IAAI;AAClB,SAAK,SAAS;AACb,UAAK,GAAG,UAAA,KAAK,EAAC,IAAI,MAAA,4BAAI,MAAM,CAAC,MAAM,EAAC,CAAC;AACrC,WAAM;AAAA,AACP,SAAK,UAAU;;AAEd,WAAM;AAAA,AACP,SAAK,OAAO,CAAC;AACb,SAAK,UAAU;AACd,UAAK,GAAM,WAAA,KAAK,EAAC,IAAI,MAAA,6BAAI,MAAM,CAAC,UAAU,EAAC,YAAM,MAAM,CAAC,KAAK,IAAI,WAAA,KAAK,EAAC,IAAI,MAAA,6BAAI,MAAM,CAAC,WAAW,EAAC,CAAA,AAAE,CAAC;AACrG,WAAM;AAAA,AACP;AACC,UAAK,GAAG,GAAG,CAAC;AAAA,IACb;;AAED,OAAI,SAAS,GAAG,MAAM,GAAG,EAAE,GAAG,MAAM,CAAC,SAAS,CAAC;;;AAG/C,UAAO;AACN,SAAK,EAAL,KAAK;AACL,eAAW,EAAE,SAAS,GAAC,KAAK;AAC5B,aAAS,EAAT,SAAS;AACT,aAAS,EAAE,MAAM,CAAC,SAAS;AAC3B,YAAQ,EAAE,MAAM,CAAC,QAAQ;IACzB,CAAC;GACF;;;QAzJI,YAAY","file":"TileRegistry.js","sourcesContent":["class TileRegistry {\n\n\tconstructor(mainParentSelector, choiceTileCount=4) {\n\t\tUtils.assert($(mainParentSelector).length > 0, \"Invalid parameter: parentSelector\" + ((mainParentSelector !== undefined) ? ` (${mainParentSelector})` : \"\"));\n\t\tUtils.assert($(mainParentSelector).length === 1, `Invalid parentSelector (too many matches): ${mainParentSelector}`);\n\n\t\tthis.mainParentSelector = mainParentSelector;\n\t\tthis.choiceTileCount = choiceTileCount;\n\n\t\tthis.mainTile = undefined;\n\t\tthis.choiceTileMap = {};\n\t}\n\n\t_initGroup(name, parentSelector=this.choiceTileMap[name].parentSelector) {\n\t\tUtils.assert(typeof name === \"string\" && name.length > 0, `Invalid parameter: name ${name === undefined ? \"\" : name}`)\n\n\t\tUtils.assert($(parentSelector).length > 0, \"Invalid parameter: parentSelector\" + ((parentSelector !== undefined) ? ` (${parentSelector})` : \"\"));\n\t\tUtils.assert($(parentSelector).length === 1, `Invalid parentSelector (too many matches): ${parentSelector}`);\n\n\t\t$(parentSelector).find(\".tile\").remove();\n\n\t\tthis.choiceTileMap[name] = {\n\t\t\tparentSelector,\n\t\t\ttiles: []\n\t\t};\n\t}\n\n\taddGroup(name, parentSelector) {\n\t\tthis._initGroup(name, parentSelector);\n\t}\n\n\tclearGroup(name) {\n\t\tthis._initGroup(name);\n\t}\n\n\t_genMainTile(diff) {\n\t\tif (this.mainTile !== undefined) {\n\t\t\tthis.mainTile.remove();\n\t\t\tthis.mainTile = undefined;\n\t\t}\n\n\t\tif (diff !== undefined) {\n\t\t\tthis.mainTile = new Tile(\n\t\t\t\tTileRegistry.getRandomTileData(diff, true).valueString,\n\t\t\t\tthis.mainParentSelector\n\t\t\t);\n\t\t}\n\n\t\tthis.mainTile.show();\n\t}\n\n\t_genChoiceTiles(groupName, diff, mainNumber) {\n\t\tUtils.assert(typeof groupName === \"string\" && this.choiceTileMap[groupName] !== undefined,\n\t\t\t`Invalid group: ${groupName}`);\n\n\t\tif (diff === undefined) {\n\t\t\tthis.clearGroup(groupName);\n\t\t\treturn;\n\t\t}\n\n\t\tUtils.assert(mainNumber !== undefined,\n\t\t\t\"_genChoiceTiles(...) must be called after main number is generated\");\n\t\tUtils.assert(typeof mainNumber === \"string\" || typeof mainNumber === \"number\",\n\t\t\t`Invalid mainNumber: ${mainNumber}`);\n\n\n\t\tvar group = this.choiceTileMap[groupName];\n\n\t\tgroup.tiles.forEach(t => t.remove());\n\t\tgroup.tiles = [];\n\n\t\tgroup.choices = [];\n\t\t//noinspection StatementWithEmptyBodyJS\n\t\tfor(;\n\t\t\tgroup.choices.push(TileRegistry._genSingleChoiceTile(diff, group, mainNumber)) < this.choiceTileCount;\n\t\t);\n\n\t\tgroup.tiles = group.choices.map(c => new Tile(c.valueString, group.parentSelector));\n\n\t\tgroup.tiles.forEach(t => t.show());\n\t}\n\n\tstatic _genSingleChoiceTile(diff, group, mainNumber) { // this could be more efficient - prevent picking invalid tiles all together\n\n\t\tmainNumber = +mainNumber;\n\n\t\tvar choice = TileRegistry.getRandomTileData(diff);\n\t\tvar choicesSoFar = group.choices;\n\n\t\tvar reRoll = () => TileRegistry.getRandomTileData(diff);\n\n\t\t//called before adding any more elements, preventing going over max\n\t\tvar hasMax = function(choices) { // currently limited to one option with maxCount; need some sort of ID system to determine which choice is which\n\t\t\tvar count = 0;\n\t\t\tvar max = 0;\n\t\t\treturn choices.some(function(c){\n\t\t\t\tif (c.maxCount !== undefined) {\n\t\t\t\t\tif (max === 0) max = c.maxCount;\n\t\t\t\t\tif (max > 0 && max === ++count) return true;\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\tvar success = false;\n\t\twhile (!success && ((choice.condition !== undefined) || (choice.maxCount !== undefined))) {\n\t\t\tsuccess = true;\n\t\t\twhile (choice.condition !== undefined && math.eval(choice.condition, {mainNumber}) === false) {\n\t\t\t\tchoice = reRoll();\n\t\t\t\tsuccess = false;\n\t\t\t}\n\t\t\twhile (choice.maxCount !== undefined && hasMax(choicesSoFar)) {\n\t\t\t\tchoice = reRoll();\n\t\t\t\tsuccess = false;\n\t\t\t}\n\t\t}\n\t\treturn choice;\n\t}\n\n\tstatic getRandomTileData(difficulty, isMain=false) { // this pulls from difficulty.js\n\n\t\tUtils.assert(typeof difficulty === \"number\" && DIFFICULTY_DATA[difficulty] !== undefined,\n\t\t\t`Invalid difficulty: ${difficulty}`);\n\n\t\tvar choices = DIFFICULTY_DATA[difficulty][isMain ? \"main\" : \"choices\"];\n\n\t\tvar choice = Utils.pickWeightedRandom(choices);\n\n\t\tvar value = undefined;\n\t\tswitch (choice.type) {\n\t\t\tcase \"integer\":\n\t\t\t\tvalue = Utils.rand(...choice.limits);\n\t\t\t\tbreak;\n\t\t\tcase \"fraction\":\n\t\t\t\t// TODO do fraction stuff\n\t\t\t\tbreak;\n\t\t\tcase \"power\":\n\t\t\tcase \"exponent\":\n\t\t\t\tvalue = `${Utils.rand(...choice.baseLimits)} ^ ${choice.power || Utils.rand(...choice.powerLimits)}`;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tvalue = NaN;\n\t\t}\n\n\t\tvar operation = isMain ? \"\" : choice.operation;\n\n\t\t//return operation + value;\n\t\treturn {\n\t\t\tvalue,\n\t\t\tvalueString: operation+value,\n\t\t\toperation,\n\t\t\tcondition: choice.condition,\n\t\t\tmaxCount: choice.maxCount\n\t\t};\n\t}\n\n\tgenerateTiles(diff) {\n\t\tthis._genMainTile(diff);\n\t\tObject.keys(this.choiceTileMap).forEach(g => this._genChoiceTiles(g, diff, this.mainTile.value));\n\t}\n}"]}