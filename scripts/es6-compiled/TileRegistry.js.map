{"version":3,"sources":["../es6/TileRegistry.js"],"names":[],"mappings":"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","file":"TileRegistry.js","sourcesContent":["class TileRegistry {\r\n\r\n\tconstructor(mainParentSelector, choiceTileCount=4) {\r\n\t\tUtils.assert($(mainParentSelector).length > 0, \"Invalid parameter: parentSelector\" + ((mainParentSelector !== undefined) ? ` (${mainParentSelector})` : \"\"));\r\n\t\tUtils.assert($(mainParentSelector).length === 1, `Invalid parentSelector (too many matches): ${mainParentSelector}`);\r\n\r\n\t\tthis.mainParentSelector = mainParentSelector;\r\n\t\tthis.choiceTileCount = choiceTileCount;\r\n\r\n\t\tthis.mainTile = undefined;\r\n\t\tthis.groups = {};\r\n\r\n\t\tthis.maxGroup = undefined;\r\n\t}\r\n\r\n\t_initGroup(name, parentSelector=this.groups[name].parentSelector) {\r\n\t\tUtils.assert(typeof name === \"string\" && name.length > 0, `Invalid parameter: name ${name === undefined ? \"\" : name}`);\r\n\r\n\t\tUtils.assert($(parentSelector).length > 0, \"Invalid parameter: parentSelector\" + ((parentSelector !== undefined) ? ` (${parentSelector})` : \"\"));\r\n\t\tUtils.assert($(parentSelector).length === 1, `Invalid parentSelector (too many matches): ${parentSelector}`);\r\n\r\n\t\t$(parentSelector).find(\".tile\").remove();\r\n\r\n\t\tlet registry = this;\r\n\r\n\t\tthis.groups[name] = {\r\n\t\t\tregistry,\r\n\t\t\tname,\r\n\t\t\tparentSelector,\r\n\t\t\ttiles: [],\r\n\t\t\tget totalValue() {\r\n\t\t\t\t// TODO where should the parenthesis be placed?\r\n\t\t\t\t// should PEMDAS be used or should each operation effect the previous total?\r\n\r\n\t\t\t\tvar mathString = [\r\n\r\n\t\t\t\t// leave it to PEMDAS. ex: \"7 * (11) + (49) / (39) + (23)\"\r\n\t\t\t\t\tregistry.mainTile.value + \" \" + (this.choices || this.tiles).map(c => `${c.operation} (${c.value})`).join(\" \"),\r\n\r\n\t\t\t\t// OR build on previous total. ex: \"( ( ( ( 7 * 11 ) + 49 ) / 39) + 23 )\"\r\n\t\t\t\t\tnew Array(registry.choiceTileCount+1).join(\"( \") + registry.mainTile.value + \" \" +\r\n\t\t\t\t\t\t(this.choices || this.tiles).map(c => `${c.operation} ${c.value} )`).join(\" \")\r\n\r\n\t\t\t\t];\r\n\r\n\t\t\t\tvar choice = 0;\r\n\r\n\t\t\t\tvar answer = math.eval(mathString[choice]);\r\n\r\n\t\t\t\t$(this.parentSelector).attr(\"title\", mathString[choice]+\" = \"+answer);\r\n\r\n\t\t\t\treturn answer;\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\taddGroup(name, parentSelector) {\r\n\t\tthis._initGroup(name, parentSelector);\r\n\t}\r\n\r\n\tclearGroup(name) {\r\n\t\tthis._initGroup(name);\r\n\t}\r\n\r\n\t_genMainTile(diff) {\r\n\t\tif (this.mainTile !== undefined) {\r\n\t\t\tthis.mainTile.remove();\r\n\t\t\tthis.mainTile = undefined;\r\n\t\t}\r\n\r\n\t\tif (diff !== undefined) {\r\n\t\t\tthis.mainTile = new Tile(\r\n\t\t\t\tRandomizer.getRandomTileData(diff, true).valueString,\r\n\t\t\t\tthis.mainParentSelector\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t_genChoiceTiles(groupName, diff, mainNumber) {\r\n\t\tUtils.assert(typeof groupName === \"string\" && this.groups[groupName] !== undefined,\r\n\t\t\t`Invalid group: ${groupName}`);\r\n\r\n\t\tif (diff === undefined) {\r\n\t\t\tthis.clearGroup(groupName);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tUtils.assert(mainNumber !== undefined,\r\n\t\t\t\"_genChoiceTiles(...) must be called after main number is generated\");\r\n\t\tUtils.assert(typeof mainNumber === \"string\" || typeof mainNumber === \"number\",\r\n\t\t\t`Invalid mainNumber: ${mainNumber}`);\r\n\r\n\r\n\t\tvar group = this.groups[groupName];\r\n\r\n\t\tgroup.tiles.forEach(t => t.remove());\r\n\t\tgroup.tiles = [];\r\n\r\n\t\tfor( // generate the tiles\r\n\t\t\tgroup.choices = [];\r\n\t\t\tgroup.choices.push(Randomizer.genSingleChoiceTile(diff, group, mainNumber)) < this.choiceTileCount;\r\n\t\t) {}\r\n\r\n\t\tfor( // shuffle the order\r\n\t\t\tlet a = group.choices, rand, i = a.length;\r\n\t\t\ti > 0;\r\n\t\t\trand = Randomizer.rand(0, --i), [a[i], a[rand]] = [a[rand], a[i]]\r\n\t\t) {}\r\n\r\n\t\tgroup.tiles = group.choices.map(c => c.toTile(group.parentSelector));\r\n\r\n\t\t$(group.parentSelector).attr(\"data-totalValue\", group.totalValue);\r\n\t}\r\n\r\n\tgenerateTiles(diff) {\r\n\t\t$(\".max\").removeClass(\"max\");\r\n\r\n\t\tthis._genMainTile(diff);\r\n\t\tObject.keys(this.groups).forEach(g => this._genChoiceTiles(g, diff, this.mainTile.value));\r\n\r\n\t\tvar totals = [];\r\n\t\tUtils.forEachIn((name,data) => { totals.push(data.totalValue) }, this.groups);\r\n\t\tthis.maxGroup = this.groups[Object.keys(this.groups)[totals.indexOf(math.max(totals))]];\r\n\t\t$(this.maxGroup.parentSelector).addClass(\"max\");\r\n\t}\r\n}"]}