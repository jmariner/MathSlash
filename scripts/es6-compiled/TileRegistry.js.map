{"version":3,"sources":["../es6/TileRegistry.js"],"names":[],"mappings":"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","file":"TileRegistry.js","sourcesContent":["class TileRegistry {\n\n\tconstructor(mainParentSelector, choiceTileCount=4) {\n\t\tUtils.assert($(mainParentSelector).length > 0, \"Invalid parameter: parentSelector\" + ((mainParentSelector !== undefined) ? ` (${mainParentSelector})` : \"\"));\n\t\tUtils.assert($(mainParentSelector).length === 1, `Invalid parentSelector (too many matches): ${mainParentSelector}`);\n\n\t\tthis.mainParentSelector = mainParentSelector;\n\t\tthis.choiceTileCount = choiceTileCount;\n\n\t\tthis.mainTile = undefined;\n\t\tthis.choiceTileMap = {};\n\t}\n\n\t_initGroup(name, parentSelector=this.choiceTileMap[name].parentSelector) {\n\t\tUtils.assert(typeof name === \"string\" && name.length > 0, `Invalid parameter: name ${name === undefined ? \"\" : name}`)\n\n\t\tUtils.assert($(parentSelector).length > 0, \"Invalid parameter: parentSelector\" + ((parentSelector !== undefined) ? ` (${parentSelector})` : \"\"));\n\t\tUtils.assert($(parentSelector).length === 1, `Invalid parentSelector (too many matches): ${parentSelector}`);\n\n\n\t\t$(parentSelector).find(\".tile\").remove();\n\n\t\tthis.choiceTileMap[name] = {\n\t\t\tparentSelector,\n\t\t\ttiles: []\n\t\t};\n\t}\n\n\taddGroup(name, parentSelector) {\n\t\tthis._initGroup(name, parentSelector);\n\t}\n\n\tclearGroup(name) {\n\t\tthis._initGroup(name);\n\t}\n\n\t_genMainTile(diff) {\n\t\tif (this.mainTile !== undefined) {\n\t\t\tthis.mainTile.remove();\n\t\t\tthis.mainTile = undefined;\n\t\t}\n\n\t\tif (diff !== undefined) {\n\t\t\tthis.mainTile = new Tile(\n\t\t\t\tTileRegistry.getRandomTileValue(diff),\n\t\t\t\tthis.mainParentSelector\n\t\t\t);\n\t\t}\n\n\t\tthis.mainTile.show();\n\t}\n\n\t_genChoiceTiles(diff, groupName, mainNumber) {\n\t\tUtils.assert(typeof groupName === \"string\" && this.choiceTileMap[groupName] !== undefined,\n\t\t\t`Invalid group: ${groupName}`);\n\n\t\tUtils.assert(mainNumber !== undefined,\n\t\t\t\"_genChoiceTiles(...) must be called after main number is generated\");\n\t\tUtils.assert(typeof mainNumber === \"string\" || typeof mainNumber === \"number\",\n\t\t\t`Invalid mainNumber: ${mainNumber}`);\n\n\t\tvar group = this.choiceTileMap[groupName];\n\n\t\tgroup.tiles.forEach(t => t.remove());\n\n\t\tgroup.tiles = Array.apply(null, {length: this.choiceTileCount})\n\t\t\t.map(() => new Tile(\n\t\t\t\tTileRegistry.getRandomTileValue(diff, mainNumber),\n\t\t\t\tgroup.parentSelector\n\t\t\t)\n\t\t);\n\n\t\tgroup.tiles.forEach(t => t.show());\n\n\t\t//noinspection StatementWithEmptyBodyJS\n\t\t//for(\n\t\t//\tvar tiles = [];\n\t\t//\ttiles.length <= this.choiceTileCount;       // this works too - just not as cool\n\t\t//\ttiles.push(TileRegistry.getRandomTileValue(diff))\n\t\t//);\n\t}\n\n\tgenerateTiles(diff) {\n\t\tthis._genMainTile(diff);\n\t\tObject.keys(this.choiceTileMap).forEach(g => this._genChoiceTiles(diff, g, this.mainTile.value));\n\t}\n}\n\nTileRegistry.getRandomTileValue = function(difficulty, mainNumber) { // this pulls from difficulty.js\n\n\tUtils.assert(typeof difficulty === \"number\" && DIFFICULTY_DATA[difficulty] !== undefined,\n\t\t`Invalid difficulty: ${difficulty}`);\n\n\tvar isMain = mainNumber === undefined;\n\n\tvar choices = DIFFICULTY_DATA[difficulty][isMain ? \"main\" : \"choices\"];\n\n\tvar choice = Utils.pickWeightedRandom(choices);\n\n\twhile (!isMain && choice.hasOwnProperty(\"iff\") && math.eval(choice.iff, {mainNumber}) === false) {\n\t\tchoice = Utils.pickWeightedRandom(choices); // TODO regenerating a set of diff4 tiles = no multiplication anymore\n\t}\n\n\tvar value = undefined;\n\tswitch (choice.type) {\n\t\tcase \"integer\":\n\t\t\tvalue = Utils.rand(...choice.limits);\n\t\t\tbreak;\n\t\tcase \"fraction\":\n\t\t\t// TODO do fraction stuff\n\t\t\tbreak;\n\t\tcase \"power\":\n\t\tcase \"exponent\":\n\t\t\tvalue = `${Utils.rand(...choice.baseLimits)} ^ ${choice.power || Utils.rand(...choice.powerLimits)}`;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tvalue = NaN;\n\t}\n\n\tvar oper = isMain ? \"\" : choice.operation;\n\n\treturn oper + value;\n\n\t//etst1\n};\n"]}