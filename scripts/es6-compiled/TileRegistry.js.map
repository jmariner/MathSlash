{"version":3,"sources":["../es6/TileRegistry.js"],"names":[],"mappings":"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","file":"TileRegistry.js","sourcesContent":["class TileRegistry {\r\n\r\n\tconstructor(mainParentSelector, choiceTileCount=4) {\r\n\t\tUtils.assert($(mainParentSelector).length > 0, \"Invalid parameter: parentSelector\" + ((mainParentSelector !== undefined) ? ` (${mainParentSelector})` : \"\"));\r\n\t\tUtils.assert($(mainParentSelector).length === 1, `Invalid parentSelector (too many matches): ${mainParentSelector}`);\r\n\r\n\t\tthis.mainParentSelector = mainParentSelector;\r\n\t\tthis.choiceTileCount = choiceTileCount;\r\n\r\n\t\tthis.mainTile = undefined;\r\n\t\tthis.choiceTileMap = {};\r\n\t}\r\n\r\n\t_initGroup(name, parentSelector=this.choiceTileMap[name].parentSelector) {\r\n\t\tUtils.assert(typeof name === \"string\" && name.length > 0, `Invalid parameter: name ${name === undefined ? \"\" : name}`)\r\n\r\n\t\tUtils.assert($(parentSelector).length > 0, \"Invalid parameter: parentSelector\" + ((parentSelector !== undefined) ? ` (${parentSelector})` : \"\"));\r\n\t\tUtils.assert($(parentSelector).length === 1, `Invalid parentSelector (too many matches): ${parentSelector}`);\r\n\r\n\t\t$(parentSelector).find(\".tile\").remove();\r\n\r\n\t\tthis.choiceTileMap[name] = {\r\n\t\t\tparentSelector,\r\n\t\t\ttiles: []\r\n\t\t};\r\n\t}\r\n\r\n\taddGroup(name, parentSelector) {\r\n\t\tthis._initGroup(name, parentSelector);\r\n\t}\r\n\r\n\tclearGroup(name) {\r\n\t\tthis._initGroup(name);\r\n\t}\r\n\r\n\t_genMainTile(diff) {\r\n\t\tif (this.mainTile !== undefined) {\r\n\t\t\tthis.mainTile.remove();\r\n\t\t\tthis.mainTile = undefined;\r\n\t\t}\r\n\r\n\t\tif (diff !== undefined) {\r\n\t\t\tthis.mainTile = new Tile(\r\n\t\t\t\tTileRegistry.getRandomTileData(diff, true).value,\r\n\t\t\t\tthis.mainParentSelector\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tthis.mainTile.show();\r\n\t}\r\n\r\n\t_genChoiceTiles(groupName, diff, mainNumber) {\r\n\t\tUtils.assert(typeof groupName === \"string\" && this.choiceTileMap[groupName] !== undefined,\r\n\t\t\t`Invalid group: ${groupName}`);\r\n\r\n\t\tif (diff === undefined) {\r\n\t\t\tthis.clearGroup(groupName);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tUtils.assert(mainNumber !== undefined,\r\n\t\t\t\"_genChoiceTiles(...) must be called after main number is generated\");\r\n\t\tUtils.assert(typeof mainNumber === \"string\" || typeof mainNumber === \"number\",\r\n\t\t\t`Invalid mainNumber: ${mainNumber}`);\r\n\r\n\r\n\t\tvar group = this.choiceTileMap[groupName];\r\n\r\n\t\tgroup.tiles.forEach(t => t.remove());\r\n\r\n\r\n\t\t//noinspection StatementWithEmptyBodyJS\r\n\t\tfor(;\r\n\t\t\tgroup.tiles.push(TileRegistry._genSingleChoiceTile(diff, group)) < this.choiceTileCount;\r\n\t\t);\r\n\r\n\t\t//group.tiles = Array.apply(null, {length: this.choiceTileCount})\r\n\t\t//\t.map(() => _genSingleChoiceTile(diff, group)\r\n\t\t//);\r\n\r\n\t\tgroup.tiles.forEach(t => t.show());\r\n\t}\r\n\r\n\tstatic _genSingleChoiceTile(diff, group) {\r\n\r\n\t\tvar initChoice = TileRegistry.getRandomTileData(diff);\r\n\t\tvar tilesSoFar = group.tiles;\r\n\r\n\t\tif (initChoice.hasOwnProperty(\"condition\")) {}\r\n\t}\r\n\r\n\tstatic getRandomTileData(difficulty, isMain=false) {//mainNumber) { // this pulls from difficulty.js\r\n\r\n\t\tUtils.assert(typeof difficulty === \"number\" && DIFFICULTY_DATA[difficulty] !== undefined,\r\n\t\t\t`Invalid difficulty: ${difficulty}`);\r\n\r\n\t\t//var isMain = mainNumber === undefined;\r\n\r\n\t\tvar choices = DIFFICULTY_DATA[difficulty][isMain ? \"main\" : \"choices\"];\r\n\r\n\t\tvar choice = Utils.pickWeightedRandom(choices);\r\n\r\n\t\t//if (!isMain) {\r\n\t\t//\twhile (choice.hasOwnProperty(\"condition\") && math.eval(choice.condition, {mainNumber}) === false) {\r\n\t\t//\t\tchoice = Utils.pickWeightedRandom(choices);\r\n\t\t//\t}\r\n\t\t//}\r\n\r\n\t\tvar value = undefined;\r\n\t\tswitch (choice.type) {\r\n\t\t\tcase \"integer\":\r\n\t\t\t\tvalue = Utils.rand(...choice.limits);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fraction\":\r\n\t\t\t\t// TODO do fraction stuff\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"power\":\r\n\t\t\tcase \"exponent\":\r\n\t\t\t\tvalue = `${Utils.rand(...choice.baseLimits)} ^ ${choice.power || Utils.rand(...choice.powerLimits)}`;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tvalue = NaN;\r\n\t\t}\r\n\r\n\t\tvar operation = isMain ? \"\" : choice.operation;\r\n\r\n\t\t//return operation + value;\r\n\t\treturn {\r\n\t\t\tvalue,\r\n\t\t\toperation,\r\n\t\t\tcondition: choice.condition\r\n\t\t};\r\n\t}\r\n\r\n\tgenerateTiles(diff) {\r\n\t\tthis._genMainTile(diff);\r\n\t\tObject.keys(this.choiceTileMap).forEach(g => this._genChoiceTiles(g, diff, this.mainTile.value));\r\n\t}\r\n}"]}