{"version":3,"sources":["../es6/randomizer.js"],"names":[],"mappings":"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","file":"randomizer.js","sourcesContent":["class Randomizer {\n\n    static rand(min, max, allowFloats) {\n        if (min === undefined ||Number.isNaN(min) || max === undefined || Number.isNaN(max)) return undefined;\n\n        if (allowFloats)\n            return min + (Math.random() * (max-min));\n        else\n            return min + Math.floor(Math.random() * (max-min+1));\n    }\n\n    static pickWeightedRandom(choices) {\n        var ret = undefined;\n        choices = $.extend(true, [], choices);\n        if (choices.length === 1) ret = choices[0];\n        else {\n            var currentCumSum = 0;\n            choices.forEach(function(c){\n                Utils.assert(c.hasOwnProperty(\"weight\"),\n                    `Invalid parameter format - each object in array needs a weight. (${JSON.stringify(choices)})`);\n                currentCumSum += c.weight;\n                c.cumSum = currentCumSum;\n            });\n            var r = Randomizer.rand(0,currentCumSum, true); // TODO this is inaccurate\n            choices.forEach(function(c, i){\n                if (r < c.cumSum && !ret) ret = choices[i];\n            });\n            delete ret.cumSum;\n        }\n        return ret;\n    }\n\n    static genSingleChoiceTile(diff, group, mainNumber) {\n\n        mainNumber = +mainNumber;\n\n        var choice = Randomizer.getRandomTileData(diff);\n\n        var reRoll = () => Randomizer.getRandomTileData(diff);\n\n        var count = function(id) {\n            let count = 0;\n            group.choices.forEach(c => { count += c.id === id });\n            return count;\n        };\n\n        var scope = () => ({\n            mainNumber,\n            me: choice.value,\n            myCount: count(choice.id),\n            valueSoFar: group.totalValue\n        });\n\n        while (choice.condition !== undefined && false === math.eval(choice.condition, scope())) {\n            choice = reRoll();\n        }\n        while (choice.retryCondition !== undefined && math.eval(choice.retryCondition, scope()) ) { //TODO you are here\n            console.log(choice.retryCondition + \" is true. scope:\");\n\t        console.log(scope());\n            choice.reRollMe(); // ex: if subtracting will make the result negative, reRoll the subtracted value\n        }\n        return choice;\n    }\n\n    static getRandomTileData(difficulty, isMain=false) { // this pulls from difficulty.js\n\n        Utils.assert(typeof difficulty === \"number\" && DIFFICULTY_DATA[difficulty] !== undefined,\n            `Invalid difficulty: ${difficulty}`);\n\n        var choices = DIFFICULTY_DATA[difficulty][isMain ? \"main\" : \"choices\"];\n\n        var choice = Randomizer.pickWeightedRandom(choices);\n\n        var value = undefined;\n\n        var roll = function() {\n            switch (choice.type) {\n                case \"integer\":\n                    value = Utils.rand(...choice.limits);\n                    break;\n                case \"fraction\":\n                    value = Utils.buildFraction(\n                        Randomizer.rand(...(choice.numeratorLimits || [NaN])),\n                        Randomizer.rand(...(choice.denominatorLimits || NaN)),\n                        Randomizer.rand(...(choice.resultLimits || [NaN]))\n                    ).toString();\n                    break;\n                case \"power\":\n                case \"exponent\":\n                    value = `${Randomizer.rand(...choice.baseLimits)} ^ ${choice.power ||\n                    Randomizer.rand(...choice.powerLimits)}`;\n                    break;\n                default:\n                    value = NaN;\n            }\n        };\n\n        roll();\n\n        var operation = isMain ? \"\" : choice.operation;\n        return {\n            value,\n            valueString: [operation,value].join(\" \"),\n            operation: Tile.operations[operation],\n            condition: choice.condition,\n\t        retryCondition: choice.retryCondition,\n            reRollMe: roll\n        };\n    }\n}\n\nclass RandomChoice { // TODO this\n\tconstructor(choice, isMain=false) {\n\t\tthis.value = undefined;\n\t\tthis.operation = isMain ? \"\" : choice.operation;\n\t\tthis.condition = choice.condition;\n\t\tthis.retryCondition = choice.retryCondition;\n\t\tthis.choice = choice;\n\t}\n\n\tget valueString() {\n\t\treturn [this.operation, this.value].join(\" \");\n\t}\n\n\treRollMe() {\n\t\tswitch (this.choice.type) {\n\t\t\tcase \"integer\":\n\t\t\t\tvalue = Utils.rand(...this.choice.limits);\n\t\t\t\tbreak;\n\t\t\tcase \"fraction\":\n\t\t\t\tvalue = Utils.buildFraction(\n\t\t\t\t\tRandomizer.rand(...(this.choice.numeratorLimits || [NaN])),\n\t\t\t\t\tRandomizer.rand(...(this.choice.denominatorLimits || NaN)),\n\t\t\t\t\tRandomizer.rand(...(this.choice.resultLimits || [NaN]))\n\t\t\t\t).toString();\n\t\t\t\tbreak;\n\t\t\tcase \"power\":\n\t\t\tcase \"exponent\":\n\t\t\t\tvalue = `${Randomizer.rand(...choice.baseLimits)} ^ ${choice.power ||\n\t\t\t\tRandomizer.rand(...choice.powerLimits)}`;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tvalue = NaN;\n\t\t}\n\t}\n\n}"]}