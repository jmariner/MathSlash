{"version":3,"sources":["../es6/difficulty.js"],"names":[],"mappings":"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","file":"difficulty.js","sourcesContent":["var DIFFICULTY_DATA = [null,\r\n\r\n//----------------------DIFFICULTY 1-----------------------------\r\n\t{\r\n\t\tmain: [\r\n\t\t\t{\r\n\t\t\t\ttype: \"integer\",\r\n\t\t\t\tweight: 1,\r\n\t\t\t\tlimits: [1,50]\r\n\t\t\t}\r\n\t\t],\r\n\t\tchoices: [\r\n\t\t\t{\r\n\t\t\t\ttype: \"integer\",\r\n\t\t\t\tweight: 1,\r\n\t\t\t\tlimits: [1, 50],\r\n\t\t\t\toperation: \"add\"\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\r\n//----------------------DIFFICULTY 2-----------------------------\r\n\t\t{\r\n\t\tmain: [\r\n\t\t\t{\r\n\t\t\t\ttype: \"integer\",\r\n\t\t\t\tweight: 1,\r\n\t\t\t\tlimits: [1, 50]\r\n\t\t\t}\r\n\t\t],\r\n\t\tchoices: [\r\n\t\t\t{\r\n\t\t\t\ttype: \"integer\",\r\n\t\t\t\tweight: 3,\r\n\t\t\t\tlimits: [1, 99],\r\n\t\t\t\toperation: \"add\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"integer\",\r\n\t\t\t\tweight: 1,\r\n\t\t\t\tlimits: [1, 50],\r\n\t\t\t\toperation: \"sub\"\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\r\n//----------------------DIFFICULTY 3-----------------------------\r\n\t{\r\n\t\tmain: [\r\n\t\t\t{\r\n\t\t\t\ttype: \"integer\",\r\n\t\t\t\tweight: 1,\r\n\t\t\t\tlimits: [1,500]\r\n\t\t\t}\r\n\t\t],\r\n\t\tchoices: [\r\n\t\t\t{\r\n\t\t\t\ttype: \"integer\",\r\n\t\t\t\tweight: 1,\r\n\t\t\t\tlimits: [1, 500],\r\n\t\t\t\toperation: \"add\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"integer\",\r\n\t\t\t\tweight: 1,\r\n\t\t\t\tlimits: [1,500],\r\n\t\t\t\toperation: \"sub\"\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\r\n//----------------------DIFFICULTY 4-----------------------------\r\n\t{\r\n\t\tmain: [\r\n\t\t\t{\r\n\t\t\t\ttype: \"integer\",\r\n\t\t\t\tweight: 10,\r\n\t\t\t\tlimits: [1, 25]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"integer\",\r\n\t\t\t\tweight: 1,\r\n\t\t\t\tlimits: [1, 99]\r\n\t\t\t}\r\n\t\t],\r\n\t\tchoices: [\r\n\t\t\t{\r\n\t\t\t\ttype: \"integer\",\r\n\t\t\t\tlimits: [1,12],\r\n\t\t\t\tweight: 20,\r\n\t\t\t\toperation: \"multi\",\r\n\t\t\t\tconditions: [\r\n\t\t\t\t\t\"mainNumber <= 12\",\r\n\t\t\t\t\t\"myCount < 1\"\r\n\t\t\t\t]\r\n\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"integer\",\r\n\t\t\t\tlimits: [1,50],\r\n\t\t\t\tweight: 1,\r\n\t\t\t\toperation: \"add\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"integer\",\r\n\t\t\t\tlimits: [1,50],\r\n\t\t\t\tweight: 1,\r\n\t\t\t\toperation: \"sub\"\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\r\n\t{\r\n\t\tmain: [ { type: \"power\", baseLimits: [1,12], powerLimits: [2,2] }],\r\n\t\tchoice: [ { type: \"power\", baseLimits: [1,12], powerLimits: [2,2] }]\r\n\t}\r\n];\r\n\r\nDIFFICULTY_DATA.forEach(function(diffGroup, diff) { // for each difficulty\r\n\r\n\tUtils.forEachIn(function (type, typeData) { // for each type (main/choices)\r\n\r\n\t\ttypeData.forEach(function (data) { // for each choice\r\n\t\t\tdata.id = [diff, type, typeData.indexOf(data)].join(\"_\");\r\n\t\t\tif (data.hasOwnProperty(\"conditions\"))\r\n\t\t\t\tdata.condition = data.conditions.join(\" and \");\r\n\t\t}); // end for each choice\r\n\r\n\t}, diffGroup); // end for each type\r\n\r\n}); // end for each difficulty\r\n\r\n/*\r\nclass Choice {\r\n    constructor(diff, isMain=false) {\r\n        this.which = isMain ? \"main\" : \"choices\";\r\n        this.diff = diff;\r\n\t\tthis.data = undefined;\r\n    }\r\n\r\n\tget id() {\r\n\t\treturn [\r\n\t\t\tthis.diff,\r\n\t\t\tthis.which.charAt(0),\r\n\t\t\tDIFFICULTY_DATA[this.diff][this.which].indexOf(this.data)\r\n\t\t].join(\".\");\r\n\t}\r\n}\r\n\r\nfunction _genSingleChoiceTile(diff, group, mainNumber) {\r\n\r\n\tmainNumber = +mainNumber;\r\n\r\n\tvar choice = TileRegistry.getRandomTileData(diff);\r\n\tvar choicesSoFar = group.choices;\r\n\r\n\tvar reRoll = () => TileRegistry.getRandomTileData(diff);\r\n\r\n\t//called before adding any more elements, preventing going over max\r\n\tvar hasMax = function(choices) { // currently limited to one option with maxCount; need some sort of ID system to determine which choice is which\r\n\t\tvar count = 0;\r\n\t\tvar max = 0;\r\n\t\treturn choices.some(function(c){\r\n\t\t\tif (c.maxCount !== undefined) {\r\n\t\t\t\tif (max === 0) max = c.maxCount;\r\n\t\t\t\tif (max > 0 && max === ++count) return true;\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tvar success = false;\r\n\twhile (!success && ((choice.condition !== undefined) || (choice.maxCount !== undefined))) {\r\n\t\tsuccess = true;\r\n\t\twhile (choice.condition !== undefined && math.eval(choice.condition, {mainNumber}) === false) {\r\n\t\t\tchoice = reRoll();\r\n\t\t\tsuccess = false;\r\n\t\t}\r\n\t\twhile (choice.maxCount !== undefined && hasMax(choicesSoFar)) {\r\n\t\t\tchoice = reRoll();\r\n\t\t\tsuccess = false;\r\n\t\t}\r\n\t}\r\n\treturn choice;\r\n}\r\n\r\nfunction getRandomTileData(difficulty, isMain=false) {\r\n\r\n\tvar choices = DIFFICULTY_DATA[difficulty][isMain ? \"main\" : \"choices\"];\r\n\r\n\t// get the random choice from the diff data\r\n\tvar choice = Utils.pickWeightedRandom(choices);\r\n\r\n\t// compute the value using given limits and type\r\n\tvar value = undefined;\r\n\tswitch (choice.type) {\r\n\t\tcase \"integer\":\r\n\t\t\tvalue = Utils.rand(...choice.limits);\r\n\t\t\tbreak;\r\n\t\tcase \"fraction\":\r\n\t\t\tbreak;\r\n\t\tcase \"power\":\r\n\t\tcase \"exponent\":\r\n\t\t\tvalue = `${Utils.rand(...choice.baseLimits)} ^ ${choice.power || Utils.rand(...choice.powerLimits)}`;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tvalue = NaN;\r\n\t}\r\n\r\n\tvar operation = isMain ? \"\" : choice.operation;\r\n\r\n\treturn {\r\n\t\tvalue,\r\n\t\tvalueString: operation+value,\r\n\t\toperation,\r\n\t\tcondition: choice.condition,\r\n\t\tmaxCount: choice.maxCount\r\n\t};\r\n}*/\r\n"]}