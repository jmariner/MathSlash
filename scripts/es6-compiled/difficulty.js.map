{"version":3,"sources":["../es6/difficulty.js"],"names":[],"mappings":"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","file":"difficulty.js","sourcesContent":["var DIFFICULTY_DATA = [null,\r\n\r\n//----------------------DIFFICULTY 1-----------------------------\r\n\t{\r\n\t\tmain: [\r\n\t\t\t{\r\n\t\t\t\ttype: \"integer\",\r\n\t\t\t\tweight: 1,\r\n\t\t\t\tlimits: [1,50]\r\n\t\t\t}\r\n\t\t],\r\n\t\tchoices: [\r\n\t\t\t{\r\n\t\t\t\ttype: \"integer\",\r\n\t\t\t\tweight: 1,\r\n\t\t\t\tlimits: [1, 50],\r\n\t\t\t\toperation: \"add\"\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\r\n//----------------------DIFFICULTY 2-----------------------------\r\n\t\t{\r\n\t\tmain: [\r\n\t\t\t{\r\n\t\t\t\ttype: \"integer\",\r\n\t\t\t\tweight: 1,\r\n\t\t\t\tlimits: [1, 50]\r\n\t\t\t}\r\n\t\t],\r\n\t\tchoices: [\r\n\t\t\t{\r\n\t\t\t\ttype: \"integer\",\r\n\t\t\t\tweight: 3,\r\n\t\t\t\tlimits: [1, 99],\r\n\t\t\t\toperation: \"add\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"integer\",\r\n\t\t\t\tweight: 1,\r\n\t\t\t\tlimits: [1, 50],\r\n\t\t\t\toperation: \"sub\"/*,\r\n\t\t\t\tretryConditions: [\r\n\t\t\t\t\t\"valueSoFar < me and myIndex == 0\"\r\n\t\t\t\t]*/\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\r\n//----------------------DIFFICULTY 3-----------------------------\r\n\t{\r\n\t\tmain: [\r\n\t\t\t{\r\n\t\t\t\ttype: \"integer\",\r\n\t\t\t\tweight: 1,\r\n\t\t\t\tlimits: [1,500]\r\n\t\t\t}\r\n\t\t],\r\n\t\tchoices: [\r\n\t\t\t{\r\n\t\t\t\ttype: \"integer\",\r\n\t\t\t\tweight: 1,\r\n\t\t\t\tlimits: [1, 500],\r\n\t\t\t\toperation: \"add\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"integer\",\r\n\t\t\t\tweight: 1,\r\n\t\t\t\tlimits: [1,500],\r\n\t\t\t\toperation: \"sub\"/*,\r\n\t\t\t\tretryConditions: [\r\n\t\t\t\t\t\"valueSoFar < me and myIndex == 0\"\r\n\t\t\t\t]*/\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\r\n//----------------------DIFFICULTY 4-----------------------------\r\n\t{\r\n\t\tmain: [\r\n\t\t\t{\r\n\t\t\t\ttype: \"integer\",\r\n\t\t\t\tweight: 10,\r\n\t\t\t\tlimits: [1, 25]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"integer\",\r\n\t\t\t\tweight: 1,\r\n\t\t\t\tlimits: [1, 99]\r\n\t\t\t}\r\n\t\t],\r\n\t\tchoices: [\r\n\t\t\t{\r\n\t\t\t\ttype: \"integer\",\r\n\t\t\t\tlimits: [2,12],\r\n\t\t\t\tweight: 20,\r\n\t\t\t\toperation: \"multi\",\r\n\t\t\t\tconditions: [\r\n\t\t\t\t\t\"mainNumber <= 12\",\r\n\t\t\t\t\t\"previous.value <= 12\",\r\n\t\t\t\t\t\"previous.operation != -\",\r\n\t\t\t\t\t\"myCount < 1\"\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"integer\",\r\n\t\t\t\tlimits: [1,50],\r\n\t\t\t\tweight: 1,\r\n\t\t\t\toperation: \"add\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"integer\",\r\n\t\t\t\tlimits: [1,50],\r\n\t\t\t\tweight: 1,\r\n\t\t\t\toperation: \"sub\"\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{\r\n\t\tmain: [\r\n\t\t\t{\r\n\t\t\t\ttype: \"integer\",\r\n\t\t\t\tlimits: [1,50],\r\n\t\t\t\tweight: 1\r\n\t\t\t}\r\n\t\t],\r\n\t\tchoices: [\r\n\t\t\t{\r\n\t\t\t\ttype: \"power\",\r\n\t\t\t\tbaseLimits: [2,12],\r\n\t\t\t\tpower: 2,\r\n\t\t\t\tweight: 50,\r\n\t\t\t\toperation: \"add\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"fraction\",\r\n\t\t\t\tresultLimits: [2,12],\r\n\t\t\t\tdenominatorLimits: [2,12],\r\n\t\t\t\tweight: 500,\r\n\t\t\t\toperation: \"add\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"integer\",\r\n\t\t\t\tlimits: [1,50],\r\n\t\t\t\tweight: 2,\r\n\t\t\t\toperation: \"add\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\ttype: \"integer\",\r\n\t\t\t\tlimits: [1,50],\r\n\t\t\t\tweight: 2,\r\n\t\t\t\toperation: \"sub\"\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n];\r\n\r\nDIFFICULTY_DATA.forEach(function(diffGroup, diff) { // for each difficulty\r\n\r\n\tUtils.forEachIn(function (type, typeData) { // for each type (main/choices)\r\n\r\n\t\ttypeData.forEach(function (data) { // for each choice\r\n\t\t\tdata.id = [diff, type, typeData.indexOf(data)].join(\"_\");\r\n\t\t\tif (data.hasOwnProperty(\"conditions\"))\r\n\t\t\t\tdata.condition = data.conditions.join(\" and \");\r\n\t\t\tif (data.hasOwnProperty(\"retryConditions\"))\r\n\t\t\t\tdata.retryCondition = data.retryConditions.join(\" or \");\r\n\t\t}); // end for each choice\r\n\r\n\t}, diffGroup); // end for each type\r\n\r\n}); // end for each difficulty\r\n"]}